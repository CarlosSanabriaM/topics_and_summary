.. _development-documentation:

Development: Documentation
===========================

This page explains how to **modify the documentation**.

The documentation is generated using the library `sphinx <http://www.sphinx-doc.org/en/master/>`__,
which uses `reStructuredText <https://es.wikipedia.org/wiki/ReStructuredText>`__ as its markup language,
and supports the following output formats:

* HTML
* LaTeX
* ePub
* Texinfo
* Manual pages
* Plain text

Apart of the documentation, a good start point is this `CheatSheet <http://openalea.gforge.inria.fr/doc/openalea/doc/_build/html/source/sphinx/rest_syntax.html>`__.

Dependencies
------------

.. I don't know why :ref:`development-installation` doens't work as it does in usage/installation.rst

The required version of the sphinx library is present in the **development-requirements.txt** file,
which content is showed in the :doc:`installation` page.

To modify the documentation, in addition to have installed the sphinx library **is also required to have installed
the topics_and_summary library** [#f1]_.

The instructions for installing both (sphinx and the library) are included in the :doc:`installation` page.

How to modify the documentation
-------------------------------

Directory structure and important files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

All the documentation files are in the **topics_and_summary/docs folder**. The most important elements of the folder are:

* **build** folder: Contains the documentation in the output formats specified with the make command (HTML, ...)
* **source** folder: Contains the source files of the documentation.
    * **_api-non-autogenerated-files** folder contains txt files that substitute the content of the specified .rst files
      generated by generate-api-doc.sh. The name of the files must be the same as the name of the api file to be substituted,
      but the extension must be .txt to avoid sphinx triying to use them. A line like the showed below must be included in the
      generate-api-doc.sh file:
      ::

        cat _api-non-autogenerated-files/<file-name>.txt > api/<file-name>.rst

* **generate-api-doc.sh**: Generates the automatic documentation of the api of the project,
  using `sphinx-apidoc <http://www.sphinx-doc.org/es/stable/man/sphinx-apidoc.html>`__. It also substitutes the content
  of the files specified in _api-non-autogenerated-files, as described in the point above, and removes the lines 3-10
  of the package files of the api, to avoid having an extra header [#f3]_.

General rules
^^^^^^^^^^^^^

The **generate-api-doc.sh** must be executed **after changes** in the library **source code**.

**If a new package is added**, a line like the one below must be added to the **generate-api-doc.sh** file:

::

    sed -i'.original' -e '3,10d' api/topics_and_summary.<package-name>.rst

Style
^^^^^

The default html theme is 'nature', which is the same as the one used in the `pandas documentation <http://pandas.pydata.org/pandas-docs/stable/index.html>`__
To change the theme, the following variable in the **conf.py** file have to be changed:

::

    html_theme = 'nature'

Posible values are described in the `sphinx-theme page <https://sphinx-themes.org>`__.


.. rubric:: Footnotes

.. [#f1] The documentation can't be generated directly using the content of the modules in the source code, because
    the source code includes the name of the library in all the imports that refer to modules of the own library [#f2]_
    (this is needed to allow the project to be converted into an installable library without problems in the imports),
    and this causes problems while trying to generate the documentation using the source code. So the solution is to
    install the library and obtain the code from that installed library.

.. [#f2] For example: from **topics_and_summary**.datasets.common import get_file_content, Document, Dataset

.. [#f3] This avoids having a toctree with unuseful elements like 'submodules' header.