FROM debian:latest
VOLUME /topics_and_summary/demo-images

#  $ docker build . -t topics_and_summary:latest
#  $ docker run --name topics_and_summary -v $PWD/demo-images:/topics_and_summary/demo-images -i -t topics_and_summary:latest

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

ENV TINI_VERSION v0.16.1
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini

# Copy all the files of the project (except the ones specified in the .dockerignore)
# into the /topics_and_summary folder of the docker image
COPY $PWD /topics_and_summary

# Install dependencies using conda
RUN conda install --file=/topics_and_summary/requirements.txt --channel conda-forge -y

# Install nltk resources
RUN python -c "import nltk;nltk.download('stopwords');nltk.download('wordnet');nltk.download('punkt')"

# Install java
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install default-jdk -y

ENTRYPOINT [ "/usr/bin/tini", "--" ]
# Run the demo at the start of the container
CMD [ "/topics_and_summary/docker-run-demo.sh" ]
